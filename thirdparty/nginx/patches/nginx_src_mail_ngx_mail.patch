--- nginx/src/mail/ngx_mail.h	2023-03-07 16:26:44.702481300 +0530
+++ nginx/src/mail/ngx_mail.h	2023-10-02 14:46:14.229251500 +0530
@@ -18,7 +18,7 @@
 #include <ngx_mail_ssl_module.h>
 #endif
 
-
+#include <sasl/sasl.h>
 
 typedef struct {
     void                  **main_conf;
@@ -117,6 +117,17 @@
 
     ngx_uint_t              max_errors;
 
+    ngx_str_t               master_auth_username;
+    ngx_str_t               master_auth_password;
+
+    ngx_str_t               sasl_app_name;
+    ngx_str_t               sasl_service_name;
+    ngx_flag_t              sasl_host_from_ip;
+
+    ngx_msec_t              auth_wait_intvl;
+
+    ngx_str_t               default_realm;
+
     ngx_str_t               server_name;
 
     u_char                 *file_name;
@@ -134,13 +145,16 @@
 
 typedef enum {
     ngx_pop3_start = 0,
+    ngx_pop3_xoip,
     ngx_pop3_user,
     ngx_pop3_passwd,
     ngx_pop3_auth_login_username,
     ngx_pop3_auth_login_password,
     ngx_pop3_auth_plain,
+    ngx_pop3_auth_plain_response,
     ngx_pop3_auth_cram_md5,
-    ngx_pop3_auth_external
+    ngx_pop3_auth_external,
+    ngx_pop3_auth_gssapi
 } ngx_pop3_state_e;
 
 
@@ -149,7 +163,10 @@
     ngx_imap_auth_login_username,
     ngx_imap_auth_login_password,
     ngx_imap_auth_plain,
+    ngx_imap_auth_plain_ir,
+    ngx_imap_auth_gssapi,
     ngx_imap_auth_cram_md5,
+    ngx_imap_id,
     ngx_imap_auth_external,
     ngx_imap_login,
     ngx_imap_user,
@@ -162,9 +179,11 @@
     ngx_smtp_auth_login_username,
     ngx_smtp_auth_login_password,
     ngx_smtp_auth_plain,
+    ngx_smtp_auth_gssapi,
     ngx_smtp_auth_cram_md5,
     ngx_smtp_auth_external,
     ngx_smtp_helo,
+    ngx_smtp_noxclient,
     ngx_smtp_helo_xclient,
     ngx_smtp_helo_auth,
     ngx_smtp_helo_from,
@@ -176,6 +195,12 @@
     ngx_smtp_to
 } ngx_smtp_state_e;
 
+/* sasl auth mechanisms */
+typedef enum {
+    ngx_auth_unknown = 0,
+    ngx_auth_plain,
+    ngx_auth_gssapi,
+} ngx_auth_e;
 
 typedef struct {
     ngx_peer_connection_t   upstream;
@@ -183,6 +208,15 @@
     ngx_uint_t              proxy_protocol;  /* unsigned  proxy_protocol:1; */
 } ngx_mail_proxy_ctx_t;
 
+typedef void (*ngx_mail_cleanup_pt)(void *data);
+
+typedef struct ngx_mail_cleanup_s  ngx_mail_cleanup_t;
+
+struct ngx_mail_cleanup_s {
+    ngx_mail_cleanup_pt               handler;
+    void                             *data;
+    ngx_mail_cleanup_t               *next;
+};
 
 typedef struct {
     uint32_t                signature;         /* "MAIL" */
@@ -202,6 +236,8 @@
 
     ngx_uint_t              mail_state;
 
+    ngx_str_t               greetings[3];
+
     unsigned                ssl:1;
     unsigned                protocol:3;
     unsigned                blocked:1;
@@ -211,10 +247,26 @@
     unsigned                no_sync_literal:1;
     unsigned                starttls:1;
     unsigned                esmtp:1;
-    unsigned                auth_method:3;
+    unsigned                auth_method:4;
     unsigned                auth_wait:1;
 
-    ngx_str_t               login;
+    unsigned                sendquitmsg:1;
+
+    unsigned                vlogin:2; /* vlogin = 0 fqdn is not looked up;
+                                         vlogin = 1 fqdn has been looked up but not found;
+                                         vlogin = 2 fqdn has been looked up and assigned to "login"
+                                       */
+
+    ngx_str_t               login; /* keep the original user input login */
+
+    ngx_str_t               qlogin; /* initially equal to 'login', then hold account name
+                                       after successful alias cache fetch or route lookup
+                                       this value is finally used to login the upstream
+                                       mail server*/
+    ngx_str_t               zlogin; /* the hack suffix "/wm" or "/ni" or "/tb" */
+    ngx_str_t               id_name;    /* the value of "name" field in IMAP ID */
+    ngx_str_t               id_version; /* the value of "version" field in IMAP ID */
+
     ngx_str_t               passwd;
 
     ngx_str_t               salt;
@@ -243,11 +295,31 @@
     u_char                 *cmd_start;
     u_char                 *arg_start;
     ngx_uint_t              literal_len;
+    ngx_uint_t              eargs;          /* expected #args for command */
+
+    /* SASL */
+    ngx_flag_t              usedauth;
+    ngx_flag_t              qualifydauth;
+    ngx_str_t               dusr;
+    ngx_str_t               zusr;
+    ngx_str_t               dpasswd;
+    ngx_auth_e              authmech;
+    ngx_flag_t              saslfr;
+    sasl_conn_t            *saslconn;
+    ngx_str_t               authid;         /* SASL authenticating user */
+
+    /* memcache keys */
+    ngx_str_t               key_alias;
+    ngx_str_t               key_route;
+
+    /* clean up */
+    ngx_mail_cleanup_t    *cleanup;
 } ngx_mail_session_t;
 
 
 typedef struct {
     ngx_str_t              *client;
+    ngx_uint_t              client_port;
     ngx_mail_session_t     *session;
 } ngx_mail_log_ctx_t;
 
@@ -275,9 +347,10 @@
 #define NGX_IMAP_NOOP          4
 #define NGX_IMAP_STARTTLS      5
 
-#define NGX_IMAP_NEXT          6
+#define NGX_IMAP_ID            6
 
 #define NGX_IMAP_AUTHENTICATE  7
+#define NGX_IMAP_NEXT          8
 
 
 #define NGX_SMTP_HELO          1
@@ -302,6 +375,11 @@
 #define NGX_MAIL_AUTH_CRAM_MD5          4
 #define NGX_MAIL_AUTH_EXTERNAL          5
 #define NGX_MAIL_AUTH_NONE              6
+/* zimbra auth definitions */
+#define NGX_MAIL_AUTH_PASSWD            7
+#define NGX_MAIL_AUTH_PLAIN_IR          8
+#define NGX_MAIL_AUTH_GSSAPI            9
+#define NGX_MAIL_AUTH_GSSAPI_IR         10
 
 
 #define NGX_MAIL_AUTH_PLAIN_ENABLED     0x0002
@@ -309,10 +387,19 @@
 #define NGX_MAIL_AUTH_APOP_ENABLED      0x0008
 #define NGX_MAIL_AUTH_CRAM_MD5_ENABLED  0x0010
 #define NGX_MAIL_AUTH_EXTERNAL_ENABLED  0x0020
-#define NGX_MAIL_AUTH_NONE_ENABLED      0x0040
+#define NGX_MAIL_AUTH_GSSAPI_ENABLED    0x0040
+#define NGX_MAIL_AUTH_NONE_ENABLED      0x0080
 
 
 #define NGX_MAIL_PARSE_INVALID_COMMAND  20
+#define NGX_MAIL_PARSE_INVALID_AUTH_MECH 30
+#define NGX_MAIL_AUTH_ABORT              40
+#define NGX_MAIL_AUTH_ARGUMENT           50
+#define NGX_MAIL_AUTH_FAILED             60
+#define NGX_MAIL_LOGIN_FAILED            70
+
+#define NGX_MAIL_MAX_LOGIN_LEN           256
+#define NGX_MAIL_MAX_PASSWORD_LEN        1024
 
 
 typedef void (*ngx_mail_init_session_pt)(ngx_mail_session_t *s,
@@ -336,6 +423,7 @@
     ngx_str_t                   internal_server_error;
     ngx_str_t                   cert_error;
     ngx_str_t                   no_cert;
+    ngx_str_t                   quit_msg;
 };
 
 
@@ -397,13 +485,27 @@
 ngx_int_t ngx_mail_auth_cram_md5(ngx_mail_session_t *s, ngx_connection_t *c);
 ngx_int_t ngx_mail_auth_external(ngx_mail_session_t *s, ngx_connection_t *c,
     ngx_uint_t n);
+ngx_int_t ngx_mail_auth_gssapi(ngx_mail_session_t *s, ngx_connection_t *c, ngx_str_t * output);
 ngx_int_t ngx_mail_auth_parse(ngx_mail_session_t *s, ngx_connection_t *c);
 
 void ngx_mail_send(ngx_event_t *wev);
 ngx_int_t ngx_mail_read_command(ngx_mail_session_t *s, ngx_connection_t *c);
+void ngx_mail_set_imap_parse_state_start(ngx_mail_session_t * s);
+void ngx_mail_set_pop3_parse_state_start(ngx_mail_session_t * s);
+void ngx_mail_set_smtp_parse_state_start(ngx_mail_session_t * s);
+void ngx_mail_set_imap_parse_state_argument(ngx_mail_session_t * s);
+void ngx_mail_set_pop3_parse_state_argument(ngx_mail_session_t * s);
+void ngx_mail_set_smtp_parse_state_argument(ngx_mail_session_t * s);
+void ngx_mail_reset_parse_buffer(ngx_mail_session_t * s);
 void ngx_mail_auth(ngx_mail_session_t *s, ngx_connection_t *c);
+void ngx_mail_do_auth(ngx_mail_session_t *s, ngx_connection_t *c); /* Zimbra mail auth portal */
 void ngx_mail_close_connection(ngx_connection_t *c);
 void ngx_mail_session_internal_server_error(ngx_mail_session_t *s);
+void ngx_mail_end_session(ngx_mail_session_t *s);
+ngx_str_t ngx_mail_session_getquitmsg(ngx_mail_session_t *s);
+ngx_str_t ngx_mail_session_geterrmsg(ngx_mail_session_t *s);
+ngx_str_t ngx_mail_get_socket_local_addr_str (ngx_pool_t *pool, ngx_socket_t s);
+ngx_int_t ngx_mail_decode_auth_plain(ngx_mail_session_t *s, ngx_str_t *encoded);
 u_char *ngx_mail_log_error(ngx_log_t *log, u_char *buf, size_t len);
 
 
@@ -416,6 +518,9 @@
 ngx_int_t ngx_mail_realip_handler(ngx_mail_session_t *s);
 /**/
 
+ngx_mail_cleanup_t * ngx_mail_cleanup_add(ngx_mail_session_t * s, size_t size);
+
+ngx_flag_t ngx_mail_get_proxy_ssl(ngx_mail_session_t *s);
 
 extern ngx_uint_t    ngx_mail_max_module;
 extern ngx_module_t  ngx_mail_core_module;
